{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filter = exports.htmlToMarkdown = exports.markdownToHtml = void 0;\n\nvar _showdown = _interopRequireDefault(require(\"showdown\"));\n\nvar _turndown = _interopRequireDefault(require(\"turndown\"));\n\nvar _turndownPluginGfm = require(\"turndown-plugin-gfm\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar turndownService = new _turndown[\"default\"]({\n  headingStyle: 'atx'\n});\nturndownService.use(_turndownPluginGfm.gfm);\nturndownService.addRule('strikethrough', {\n  filter: ['del', 's', 'strike'],\n  replacement: function replacement(content) {\n    return \"~\".concat(content, \"~\");\n  }\n});\nturndownService.addRule('underline', {\n  filter: ['u'],\n  replacement: function replacement(content) {\n    return \"__\".concat(content, \"__\");\n  }\n});\nturndownService.addRule('emphasis', {\n  filter: ['em'],\n  replacement: function replacement(content) {\n    return \"*\".concat(content, \"*\");\n  }\n});\nvar markdownToHtmlConverter = new _showdown[\"default\"].Converter();\nmarkdownToHtmlConverter.setOption('underline', true);\n\nvar markdownToHtml = function markdownToHtml(_ref) {\n  var markdown = _ref.markdown,\n      _ref$inputFilters = _ref.inputFilters,\n      inputFilters = _ref$inputFilters === void 0 ? [] : _ref$inputFilters;\n\n  var _markdown = markdown.slice(0);\n\n  _markdown = filter({\n    string: _markdown,\n    filters: inputFilters\n  });\n  var html = markdownToHtmlConverter.makeHtml(_markdown);\n  return html;\n};\n\nexports.markdownToHtml = markdownToHtml;\n\nvar htmlToMarkdown = function htmlToMarkdown(_ref2) {\n  var html = _ref2.html,\n      _ref2$outputFilters = _ref2.outputFilters,\n      outputFilters = _ref2$outputFilters === void 0 ? [] : _ref2$outputFilters;\n  var markdown = turndownService.turndown(html);\n  markdown = filter({\n    string: markdown,\n    filters: outputFilters\n  });\n  return markdown;\n};\n\nexports.htmlToMarkdown = htmlToMarkdown;\n\nvar filter = function filter(_ref3) {\n  var string = _ref3.string,\n      filters = _ref3.filters;\n\n  var _string = string.slice(0);\n\n  filters.forEach(function (filter) {\n    var _filter = _slicedToArray(filter, 2),\n        replacee = _filter[0],\n        replacer = _filter[1];\n\n    _string = _string.replace(replacee, replacer);\n  });\n  return _string;\n};\n\nexports.filter = filter;","map":null,"metadata":{},"sourceType":"script"}