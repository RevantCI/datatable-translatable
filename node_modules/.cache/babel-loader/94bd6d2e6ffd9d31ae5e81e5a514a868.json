{"ast":null,"code":"export var parseDataTable = function parseDataTable(_ref) {\n  var table = _ref.table,\n      rowDelimiter = _ref.rowDelimiter,\n      cellDelimiter = _ref.cellDelimiter;\n  var rows = parseRows({\n    table: table,\n    delimiter: rowDelimiter\n  }).map(function (row) {\n    return parseCells({\n      row: row,\n      delimiter: cellDelimiter\n    });\n  });\n  var dataTable = {\n    columnNames: getColumnNames(rows),\n    data: getData(rows)\n  };\n  return dataTable;\n};\nexport var getColumnNames = function getColumnNames(rows) {\n  return rows[0];\n};\nexport var getData = function getData(rows) {\n  return rows.slice(1);\n};\nexport var parseRows = function parseRows(_ref2) {\n  var table = _ref2.table,\n      delimiter = _ref2.delimiter;\n  return table.split(delimiter);\n};\nexport var parseCells = function parseCells(_ref3) {\n  var row = _ref3.row,\n      delimiter = _ref3.delimiter;\n  return row.split(delimiter);\n};","map":{"version":3,"sources":["/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/helpers.js"],"names":["parseDataTable","table","rowDelimiter","cellDelimiter","rows","parseRows","delimiter","map","row","parseCells","dataTable","columnNames","getColumnNames","data","getData","slice","split"],"mappings":"AAEA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAA0C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,YAAiC,QAAjCA,YAAiC;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AACtE,MAAMC,IAAI,GAAGC,SAAS,CAAC;AAACJ,IAAAA,KAAK,EAALA,KAAD;AAAQK,IAAAA,SAAS,EAAEJ;AAAnB,GAAD,CAAT,CACZK,GADY,CACR,UAAAC,GAAG;AAAA,WACNC,UAAU,CAAC;AAACD,MAAAA,GAAG,EAAHA,GAAD;AAAMF,MAAAA,SAAS,EAAEH;AAAjB,KAAD,CADJ;AAAA,GADK,CAAb;AAIA,MAAMO,SAAS,GAAG;AAChBC,IAAAA,WAAW,EAAEC,cAAc,CAACR,IAAD,CADX;AAEhBS,IAAAA,IAAI,EAAEC,OAAO,CAACV,IAAD;AAFG,GAAlB;AAIA,SAAOM,SAAP;AACD,CAVM;AAYP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACR,IAAD;AAAA,SAAUA,IAAI,CAAC,CAAD,CAAd;AAAA,CAAvB;AACP,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU,CAACV,IAAD;AAAA,SAAUA,IAAI,CAACW,KAAL,CAAW,CAAX,CAAV;AAAA,CAAhB;AAEP,OAAO,IAAMV,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEJ,KAAF,SAAEA,KAAF;AAAA,MAASK,SAAT,SAASA,SAAT;AAAA,SAAwBL,KAAK,CAACe,KAAN,CAAYV,SAAZ,CAAxB;AAAA,CAAlB;AACP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAED,GAAF,SAAEA,GAAF;AAAA,MAAOF,SAAP,SAAOA,SAAP;AAAA,SAAsBE,GAAG,CAACQ,KAAJ,CAAUV,SAAV,CAAtB;AAAA,CAAnB","sourcesContent":["\n\nexport const parseDataTable = ({table, rowDelimiter, cellDelimiter}) => {\n  const rows = parseRows({table, delimiter: rowDelimiter})\n  .map(row =>\n    parseCells({row, delimiter: cellDelimiter})\n  );\n  const dataTable = {\n    columnNames: getColumnNames(rows),\n    data: getData(rows),\n  }\n  return dataTable;\n};\n\nexport const getColumnNames = (rows) => rows[0];\nexport const getData = (rows) => rows.slice(1);\n\nexport const parseRows = ({table, delimiter}) => table.split(delimiter);\nexport const parseCells = ({row, delimiter}) => row.split(delimiter);"]},"metadata":{},"sourceType":"module"}