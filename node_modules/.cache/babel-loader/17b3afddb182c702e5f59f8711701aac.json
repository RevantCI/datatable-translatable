{"ast":null,"code":"import _objectSpread from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/DataTable.js\";\nimport React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { getMuiTheme } from './muiTheme';\nimport Cell from './Cell';\nimport CustomToolbar from './CustomToolbar';\nimport { parseDataTables } from './helpers';\n\nfunction DataTable(_ref) {\n  var original = _ref.original,\n      translation = _ref.translation,\n      options = _ref.options,\n      props = _objectWithoutProperties(_ref, [\"original\", \"translation\", \"options\"]);\n\n  var _useState = useState(25),\n      _useState2 = _slicedToArray(_useState, 2),\n      rowsPerPage = _useState2[0],\n      setRowsPerPage = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      preview = _useState4[0],\n      setPreview = _useState4[1];\n\n  var togglePreview = function togglePreview() {\n    return setPreview(!preview);\n  };\n\n  var onSave = function onSave() {};\n\n  var _options = _objectSpread({\n    responsive: 'scroll',\n    fixedHeader: false,\n    resizableColumns: false,\n    selectableRows: 'none',\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: setRowsPerPage,\n    download: false,\n    print: false,\n    customToolbar: function customToolbar() {\n      return React.createElement(CustomToolbar, {\n        preview: preview,\n        onPreview: togglePreview,\n        onSave: onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }, options);\n\n  var columns, data;\n\n  if (original && translation) {\n    var dataTable = parseDataTables({\n      original: original,\n      translation: translation,\n      rowDelimiter: '\\n',\n      cellDelimiter: '\\t'\n    });\n    columns = dataTable.columnNames.map(function (name) {\n      return {\n        name: name,\n        options: {\n          customBodyRender: function customBodyRender(value, tableMeta, updateValue) {\n            return React.createElement(Cell, {\n              value: value,\n              tableMeta: tableMeta,\n              preview: preview,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            });\n          }\n        }\n      };\n    });\n    data = dataTable.data;\n  }\n\n  return React.createElement(MuiThemeProvider, {\n    theme: getMuiTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, Object.assign({\n    columns: columns,\n    data: data,\n    options: _options\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/DataTable.js"],"names":["React","useState","MUIDataTable","MuiThemeProvider","getMuiTheme","Cell","CustomToolbar","parseDataTables","DataTable","original","translation","options","props","rowsPerPage","setRowsPerPage","preview","setPreview","togglePreview","onSave","_options","responsive","fixedHeader","resizableColumns","selectableRows","rowsPerPageOptions","onChangeRowsPerPage","download","print","customToolbar","columns","data","dataTable","rowDelimiter","cellDelimiter","columnNames","map","name","customBodyRender","value","tableMeta","updateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,SAASC,SAAT,OAKG;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDC,WAGC,QAHDA,WAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADEC,KACF;;AAAA,kBACqCX,QAAQ,CAAC,EAAD,CAD7C;AAAA;AAAA,MACMY,WADN;AAAA,MACmBC,cADnB;;AAAA,mBAE6Bb,QAAQ,CAAC,IAAD,CAFrC;AAAA;AAAA,MAEMc,OAFN;AAAA,MAEeC,UAFf;;AAID,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMD,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,GAAtB;;AACA,MAAMG,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB;;AAEA,MAAMC,QAAQ;AACZC,IAAAA,UAAU,EAAE,QADA;AAEZC,IAAAA,WAAW,EAAE,KAFD;AAGZC,IAAAA,gBAAgB,EAAE,KAHN;AAIZC,IAAAA,cAAc,EAAE,MAJJ;AAKZV,IAAAA,WAAW,EAAEA,WALD;AAMZW,IAAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CANR;AAOZC,IAAAA,mBAAmB,EAAEX,cAPT;AAQZY,IAAAA,QAAQ,EAAE,KARE;AASZC,IAAAA,KAAK,EAAE,KATK;AAUZC,IAAAA,aAAa,EAAE;AAAA,aACb,oBAAC,aAAD;AACE,QAAA,OAAO,EAAEb,OADX;AAEE,QAAA,SAAS,EAAEE,aAFb;AAGE,QAAA,MAAM,EAAEC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa;AAAA;AAVH,KAiBTP,OAjBS,CAAd;;AAoBA,MAAIkB,OAAJ,EAAaC,IAAb;;AACA,MAAIrB,QAAQ,IAAIC,WAAhB,EAA6B;AAC3B,QAAMqB,SAAS,GAAGxB,eAAe,CAAC;AAACE,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,WAAW,EAAXA,WAAX;AAAwBsB,MAAAA,YAAY,EAAE,IAAtC;AAA4CC,MAAAA,aAAa,EAAE;AAA3D,KAAD,CAAjC;AACAJ,IAAAA,OAAO,GAAGE,SAAS,CAACG,WAAV,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,aAAK;AAC3CA,QAAAA,IAAI,EAAJA,IAD2C;AAE3CzB,QAAAA,OAAO,EAAE;AACP0B,UAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAQC,SAAR,EAAmBC,WAAnB;AAAA,mBAChB,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEF,KAAb;AAAoB,cAAA,SAAS,EAAEC,SAA/B;AAA0C,cAAA,OAAO,EAAExB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA;AADX;AAFkC,OAAL;AAAA,KAA9B,CAAV;AAQAe,IAAAA,IAAI,GAAGC,SAAS,CAACD,IAAjB;AACD;;AAED,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE1B,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEyB,OADX;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,OAAO,EAAEX;AAHX,KAIMP,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAUD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { getMuiTheme } from './muiTheme';\nimport Cell from './Cell';\nimport CustomToolbar from './CustomToolbar';\n\nimport { parseDataTables } from './helpers';\n\nfunction DataTable ({\n  original,\n  translation,\n  options,\n  ...props\n}) {\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [preview, setPreview] = useState(true);\n\n  const togglePreview = () => setPreview(!preview);\n  const onSave = () => {};\n\n  const _options = {\n    responsive: 'scroll',\n    fixedHeader: false,\n    resizableColumns: false,\n    selectableRows: 'none',\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: setRowsPerPage,\n    download: false,\n    print: false,\n    customToolbar: () => (\n      <CustomToolbar\n        preview={preview}\n        onPreview={togglePreview}\n        onSave={onSave}\n      />\n    ),\n    ...options\n  };\n\n  let columns, data;\n  if (original && translation) {\n    const dataTable = parseDataTables({original, translation, rowDelimiter: '\\n', cellDelimiter: '\\t'});\n    columns = dataTable.columnNames.map(name => ({\n      name,\n      options: {\n        customBodyRender: (value, tableMeta, updateValue) => (\n          <Cell value={value} tableMeta={tableMeta} preview={preview} />\n        )\n      }\n    }));\n    data = dataTable.data;\n  }\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme}>\n      <MUIDataTable\n        columns={columns}\n        data={data}\n        options={_options}\n        {...props}\n      />\n    </MuiThemeProvider>\n  )\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}