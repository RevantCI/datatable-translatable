{"ast":null,"code":"import _slicedToArray from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/Cell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BlockEditable } from 'markdown-translatable';\nvar style = {\n  padding: '0px'\n};\nvar inputFilters = [[/<br>/gi, '\\n']];\nvar outputFilters = [[/\\n/gi, '<br>']];\nvar blockStyle = {\n  display: 'inline-block',\n  width: '50%'\n};\n\nvar Cell = function Cell(_ref) {\n  var classes = _ref.classes,\n      value = _ref.value,\n      tableMeta = _ref.tableMeta,\n      _ref$tableMeta = _ref.tableMeta,\n      columnIndex = _ref$tableMeta.columnIndex,\n      rowIndex = _ref$tableMeta.rowIndex,\n      preview = _ref.preview;\n\n  var _value$split = value.split('\\t'),\n      _value$split2 = _slicedToArray(_value$split, 2),\n      original = _value$split2[0],\n      translation = _value$split2[1];\n\n  var onEdit = function onEdit(markdown) {\n    debugger; // editCell({rowIndex, columnIndex, value: markdown});\n  }; // const originalComponent = (\n  //   <BlockEditable\n  //     style={style}\n  //     raw={!preview}\n  //     markdown={original}\n  //     editable={false}\n  //     inputFilters={inputFilters}\n  //     outputFilters={outputFilters}\n  //   />\n  // );\n  // const translationComponent = (\n  //   <BlockEditable\n  //     style={style}\n  //     raw={!preview}\n  //     markdown={translation}\n  //     editable={true}\n  //     inputFilters={inputFilters}\n  //     outputFilters={outputFilters}\n  //     onEdit={onEdit}\n  //   />\n  // );\n\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: blockStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, original), React.createElement(\"div\", {\n    style: blockStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, translation));\n};\n\nCell.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default Cell;","map":{"version":3,"sources":["/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/Cell.js"],"names":["React","PropTypes","BlockEditable","style","padding","inputFilters","outputFilters","blockStyle","display","width","Cell","classes","value","tableMeta","columnIndex","rowIndex","preview","split","original","translation","onEdit","markdown","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,IAAMC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAd;AACA,IAAMC,YAAY,GAAG,CAAC,CAAC,QAAD,EAAW,IAAX,CAAD,CAArB;AACA,IAAMC,aAAa,GAAG,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD,CAAtB;AACA,IAAMC,UAAU,GAAG;AAACC,EAAAA,OAAO,EAAE,cAAV;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OASP;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,4BALJA,SAKI;AAAA,MAJFC,WAIE,kBAJFA,WAIE;AAAA,MAHFC,QAGE,kBAHFA,QAGE;AAAA,MADJC,OACI,QADJA,OACI;;AAAA,qBAC4BJ,KAAK,CAACK,KAAN,CAAY,IAAZ,CAD5B;AAAA;AAAA,MACGC,QADH;AAAA,MACaC,WADb;;AAEJ,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAc;AAC3B,aAD2B,CAE3B;AACD,GAHD,CAFI,CAOJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE,0CACE;AAAK,IAAA,KAAK,EAAEd,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,QADH,CADF,EAIE;AAAK,IAAA,KAAK,EAAEX,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,WADH,CAJF,CADF;AAUD,CAhDD;;AAkDAT,IAAI,CAACY,SAAL,GAAiB;AACfX,EAAAA,OAAO,EAAEV,SAAS,CAACsB,MAAV,CAAiBC;AADX,CAAjB;AAIA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { BlockEditable } from 'markdown-translatable';\n\nconst style = { padding: '0px' };\nconst inputFilters = [[/<br>/gi, '\\n']];\nconst outputFilters = [[/\\n/gi, '<br>']];\nconst blockStyle = {display: 'inline-block', width: '50%'};\n\nconst Cell = ({\n  classes,\n  value,\n  tableMeta,\n  tableMeta: {\n    columnIndex,\n    rowIndex,\n  },\n  preview,\n}) => {\n  const [original, translation] = value.split('\\t');\n  const onEdit = (markdown) => {\n    debugger\n    // editCell({rowIndex, columnIndex, value: markdown});\n  };\n\n  // const originalComponent = (\n  //   <BlockEditable\n  //     style={style}\n  //     raw={!preview}\n  //     markdown={original}\n  //     editable={false}\n  //     inputFilters={inputFilters}\n  //     outputFilters={outputFilters}\n  //   />\n  // );\n  // const translationComponent = (\n  //   <BlockEditable\n  //     style={style}\n  //     raw={!preview}\n  //     markdown={translation}\n  //     editable={true}\n  //     inputFilters={inputFilters}\n  //     outputFilters={outputFilters}\n  //     onEdit={onEdit}\n  //   />\n  // );\n\n  return (\n    <>\n      <div style={blockStyle}>\n        {original}\n      </div>\n      <div style={blockStyle}>\n        {translation}\n      </div>\n    </>\n  );\n};\n\nCell.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}