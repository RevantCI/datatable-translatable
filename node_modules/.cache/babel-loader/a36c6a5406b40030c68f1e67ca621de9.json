{"ast":null,"code":"var _jsxFileName = \"/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/CustomToolbar.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { Pageview, PageviewOutlined, Save, SaveOutlined } from '@material-ui/icons';\n\nfunction CustomToolbar(_ref) {\n  var classes = _ref.classes,\n      preview = _ref.preview,\n      onPreview = _ref.onPreview,\n      canSave = _ref.canSave,\n      onSave = _ref.onSave;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.iconButton,\n    onClick: onPreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, preview ? React.createElement(PageviewOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(Pageview, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(Tooltip, {\n    title: \"Save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.iconButton,\n    onClick: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, preview ? React.createElement(Save, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(SaveOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n}\n\nvar styles = {\n  iconButton: {}\n};\nexport default withStyles(styles, {\n  name: \"CustomToolbar\"\n})(CustomToolbar);","map":{"version":3,"sources":["/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/CustomToolbar.js"],"names":["React","withStyles","IconButton","Tooltip","Pageview","PageviewOutlined","Save","SaveOutlined","CustomToolbar","classes","preview","onPreview","canSave","onSave","iconButton","styles","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,UADF,EAEEC,OAFF,QAGO,mBAHP;AAIA,SACEC,QADF,EAEEC,gBAFF,EAGEC,IAHF,EAIEC,YAJF,QAKO,oBALP;;AAOA,SAASC,aAAT,OAMG;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,MACC,QADDA,MACC;AAED,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEJ,OAAO,CAACK,UAA/B;AAA2C,IAAA,OAAO,EAAEH,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,OAAO,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CADF,CADF,EAME,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACK,UAA/B;AAA2C,IAAA,OAAO,EAAED,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,OAAO,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAc,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,CADF,CANF,CADF;AAcD;;AAED,IAAMK,MAAM,GAAG;AACbD,EAAAA,UAAU,EAAE;AADC,CAAf;AAIA,eAAeb,UAAU,CAACc,MAAD,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAV,CACbR,aADa,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  Pageview,\n  PageviewOutlined,\n  Save,\n  SaveOutlined,\n} from '@material-ui/icons';\n\nfunction CustomToolbar({\n  classes,\n  preview,\n  onPreview,\n  canSave,\n  onSave,\n}) {\n\n  return (\n    <React.Fragment>\n      <Tooltip title=\"Preview\">\n        <IconButton className={classes.iconButton} onClick={onPreview}>\n          { preview ? <PageviewOutlined /> : <Pageview /> }\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Save\">\n        <IconButton className={classes.iconButton} onClick={onSave}>\n        { preview ? <Save /> : <SaveOutlined /> }\n        </IconButton>\n      </Tooltip>\n    </React.Fragment>\n  );\n}\n\nconst styles = {\n  iconButton: {}\n};\n\nexport default withStyles(styles, { name: \"CustomToolbar\" })(\n  CustomToolbar\n);\n"]},"metadata":{},"sourceType":"module"}