{"ast":null,"code":"import _toConsumableArray from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Volumes/GithubWorkspace/datatable-translatable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/DataTable.js\";\nimport React, { useState } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { getMuiTheme } from './muiTheme';\nimport Cell from './Cell';\nimport CustomToolbar from './CustomToolbar';\nimport { parseDataTables } from './helpers';\nimport { Typography } from '@material-ui/core';\n\nfunction DataTable(_ref) {\n  var original = _ref.original,\n      translation = _ref.translation,\n      options = _ref.options,\n      props = _objectWithoutProperties(_ref, [\"original\", \"translation\", \"options\"]);\n\n  var _useState = useState(25),\n      _useState2 = _slicedToArray(_useState, 2),\n      rowsPerPage = _useState2[0],\n      setRowsPerPage = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      preview = _useState4[0],\n      setPreview = _useState4[1];\n\n  var togglePreview = function togglePreview() {\n    return setPreview(!preview);\n  };\n\n  var onSave = function onSave() {};\n\n  var _options = _objectSpread({\n    responsive: 'scroll',\n    fixedHeader: false,\n    resizableColumns: false,\n    selectableRows: 'none',\n    rowHover: false,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: setRowsPerPage,\n    download: false,\n    print: false,\n    customToolbar: function customToolbar() {\n      return React.createElement(CustomToolbar, {\n        preview: preview,\n        onPreview: togglePreview,\n        onSave: onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }, options);\n\n  var rowHeader = function rowHeader(rowData) {\n    return React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\".concat(rowData[0 + 1].split('\\t')[0], \" \").concat(rowData[1 + 1].split('\\t')[0], \":\").concat(rowData[2 + 1].split('\\t')[0]));\n  };\n\n  var hideColumns = [0, 1, 2, 3, 6];\n  var noFilter = [0, 3, 5, 6, 7, 8];\n  var compositeKeyIndices = [0, 1, 2, 3];\n  var rowDelimiter = '\\n';\n  var cellDelimiter = '\\t';\n  var columns = [];\n  var data = [];\n\n  if (original && translation) {\n    var dataTable = parseDataTables({\n      original: original,\n      translation: translation,\n      compositeKeyIndices: compositeKeyIndices,\n      rowDelimiter: rowDelimiter,\n      cellDelimiter: cellDelimiter\n    });\n\n    var customBodyRender = function customBodyRender(value, tableMeta, updateValue) {\n      return React.createElement(Cell, {\n        value: value,\n        rowHeader: rowHeader,\n        tableMeta: tableMeta,\n        preview: preview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    };\n\n    columns = dataTable.columnNames.map(function (name, index) {\n      return {\n        name: name,\n        searchable: true,\n        options: {\n          display: !hideColumns.includes(index),\n          filter: !noFilter.includes(index),\n          customBodyRender: customBodyRender\n        }\n      };\n    });\n\n    if (rowHeader) {\n      var headerColumn = {\n        name: 'rowHeader',\n        options: {\n          filter: false,\n          customBodyRender: customBodyRender\n        }\n      };\n      columns.unshift(headerColumn);\n      data = dataTable.data.map(function (row) {\n        return ['rowHeader'].concat(_toConsumableArray(row));\n      });\n    } else {\n      data = dataTable.data;\n    }\n  }\n\n  return React.createElement(MuiThemeProvider, {\n    theme: getMuiTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, Object.assign({\n    columns: columns,\n    data: data,\n    options: _options\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })));\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/Volumes/GithubWorkspace/datatable-translatable/src/components/datatable/DataTable.js"],"names":["React","useState","MUIDataTable","MuiThemeProvider","getMuiTheme","Cell","CustomToolbar","parseDataTables","Typography","DataTable","original","translation","options","props","rowsPerPage","setRowsPerPage","preview","setPreview","togglePreview","onSave","_options","responsive","fixedHeader","resizableColumns","selectableRows","rowHover","rowsPerPageOptions","onChangeRowsPerPage","download","print","customToolbar","rowHeader","rowData","split","hideColumns","noFilter","compositeKeyIndices","rowDelimiter","cellDelimiter","columns","data","dataTable","customBodyRender","value","tableMeta","updateValue","columnNames","map","name","index","searchable","display","includes","filter","headerColumn","unshift","row"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { getMuiTheme } from './muiTheme';\nimport Cell from './Cell';\nimport CustomToolbar from './CustomToolbar';\n\nimport { parseDataTables } from './helpers';\nimport { Typography } from '@material-ui/core';\n\nfunction DataTable ({\n  original,\n  translation,\n  options,\n  ...props\n}) {\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [preview, setPreview] = useState(true);\n\n  const togglePreview = () => setPreview(!preview);\n  const onSave = () => {};\n\n  const _options = {\n    responsive: 'scroll',\n    fixedHeader: false,\n    resizableColumns: false,\n    selectableRows: 'none',\n    rowHover: false,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [25, 50, 100],\n    onChangeRowsPerPage: setRowsPerPage,\n    download: false,\n    print: false,\n    customToolbar: () => (\n      <CustomToolbar\n        preview={preview}\n        onPreview={togglePreview}\n        onSave={onSave}\n      />\n    ),\n    ...options\n  };\n\n  const rowHeader = (rowData) => (\n    <Typography variant='h6'>\n      {`${rowData[0+1].split('\\t')[0]} ${rowData[1+1].split('\\t')[0]}:${rowData[2+1].split('\\t')[0]}`}\n    </Typography>\n  );\n  const hideColumns = [0,1,2,3,6];\n  const noFilter = [0,3,5,6,7,8];\n  const compositeKeyIndices = [0,1,2,3];\n  const rowDelimiter = '\\n';\n  const cellDelimiter = '\\t';\n  \n  let columns = [];\n  let data = [];\n  if (original && translation) {\n    const dataTable = parseDataTables({\n      original,\n      translation,\n      compositeKeyIndices,\n      rowDelimiter,\n      cellDelimiter,\n    });\n    const customBodyRender = (value, tableMeta, updateValue) => (\n      <Cell value={value} rowHeader={rowHeader} tableMeta={tableMeta} preview={preview} />\n    );\n    columns = dataTable.columnNames.map((name, index) => ({\n      name,\n      searchable: true,\n      options: {\n        display: !hideColumns.includes(index),\n        filter: !noFilter.includes(index),\n        customBodyRender,\n      },\n    }));\n    if (rowHeader) {\n      const headerColumn = {\n        name: 'rowHeader',\n        options: {\n          filter: false,\n          customBodyRender,\n        },\n      };\n      columns.unshift(headerColumn);\n      data = dataTable.data.map(row => ['rowHeader', ...row]);\n    } else {\n      data = dataTable.data;\n    }\n  }\n\n  return (\n    <MuiThemeProvider theme={getMuiTheme}>\n      <MUIDataTable\n        columns={columns}\n        data={data}\n        options={_options}\n        {...props}\n      />\n    </MuiThemeProvider>\n  )\n}\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}